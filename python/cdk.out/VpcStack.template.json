{
  "Resources": {
    "Opsvpc07C0A66D": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "VpcStack/Opsvpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/Resource"
      }
    },
    "OpsvpcPublicSubnet1Subnet07579BF3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "Opsvpc07C0A66D"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "VpcStack/Opsvpc/PublicSubnet1"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PublicSubnet1/Subnet"
      }
    },
    "OpsvpcPublicSubnet1RouteTable04B7FAA7": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Opsvpc07C0A66D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "VpcStack/Opsvpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PublicSubnet1/RouteTable"
      }
    },
    "OpsvpcPublicSubnet1RouteTableAssociation28315217": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "OpsvpcPublicSubnet1RouteTable04B7FAA7"
        },
        "SubnetId": {
          "Ref": "OpsvpcPublicSubnet1Subnet07579BF3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "OpsvpcPublicSubnet1DefaultRoute9964E7B2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "OpsvpcPublicSubnet1RouteTable04B7FAA7"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "OpsvpcIGW3F5CB6DC"
        }
      },
      "DependsOn": [
        "OpsvpcVPCGW715F0658"
      ],
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PublicSubnet1/DefaultRoute"
      }
    },
    "OpsvpcPublicSubnet1EIPF5EEAC90": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PublicSubnet1/EIP"
      }
    },
    "OpsvpcPublicSubnet1NATGatewayDAA8A80D": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "OpsvpcPublicSubnet1EIPF5EEAC90",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "OpsvpcPublicSubnet1Subnet07579BF3"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "VpcStack/Opsvpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PublicSubnet1/NATGateway"
      }
    },
    "OpsvpcPublicSubnet2SubnetCEC40F59": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "Opsvpc07C0A66D"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "VpcStack/Opsvpc/PublicSubnet2"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PublicSubnet2/Subnet"
      }
    },
    "OpsvpcPublicSubnet2RouteTable83866DB2": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Opsvpc07C0A66D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "VpcStack/Opsvpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PublicSubnet2/RouteTable"
      }
    },
    "OpsvpcPublicSubnet2RouteTableAssociationE94DDE25": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "OpsvpcPublicSubnet2RouteTable83866DB2"
        },
        "SubnetId": {
          "Ref": "OpsvpcPublicSubnet2SubnetCEC40F59"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "OpsvpcPublicSubnet2DefaultRoute8EF6A903": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "OpsvpcPublicSubnet2RouteTable83866DB2"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "OpsvpcIGW3F5CB6DC"
        }
      },
      "DependsOn": [
        "OpsvpcVPCGW715F0658"
      ],
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PublicSubnet2/DefaultRoute"
      }
    },
    "OpsvpcPublicSubnet2EIP17AA2639": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PublicSubnet2/EIP"
      }
    },
    "OpsvpcPublicSubnet2NATGatewayE8998429": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "OpsvpcPublicSubnet2EIP17AA2639",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "OpsvpcPublicSubnet2SubnetCEC40F59"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "VpcStack/Opsvpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PublicSubnet2/NATGateway"
      }
    },
    "OpsvpcPrivateSubnet1Subnet1646B52F": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "Opsvpc07C0A66D"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "VpcStack/Opsvpc/PrivateSubnet1"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PrivateSubnet1/Subnet"
      }
    },
    "OpsvpcPrivateSubnet1RouteTable2A32C7C6": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Opsvpc07C0A66D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "VpcStack/Opsvpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PrivateSubnet1/RouteTable"
      }
    },
    "OpsvpcPrivateSubnet1RouteTableAssociation162CC2AC": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "OpsvpcPrivateSubnet1RouteTable2A32C7C6"
        },
        "SubnetId": {
          "Ref": "OpsvpcPrivateSubnet1Subnet1646B52F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "OpsvpcPrivateSubnet1DefaultRouteA4F42E90": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "OpsvpcPrivateSubnet1RouteTable2A32C7C6"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "OpsvpcPublicSubnet1NATGatewayDAA8A80D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PrivateSubnet1/DefaultRoute"
      }
    },
    "OpsvpcPrivateSubnet2Subnet3631998D": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "Opsvpc07C0A66D"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "VpcStack/Opsvpc/PrivateSubnet2"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PrivateSubnet2/Subnet"
      }
    },
    "OpsvpcPrivateSubnet2RouteTableD8487AE1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "Opsvpc07C0A66D"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "VpcStack/Opsvpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PrivateSubnet2/RouteTable"
      }
    },
    "OpsvpcPrivateSubnet2RouteTableAssociationB5ED42D3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "OpsvpcPrivateSubnet2RouteTableD8487AE1"
        },
        "SubnetId": {
          "Ref": "OpsvpcPrivateSubnet2Subnet3631998D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "OpsvpcPrivateSubnet2DefaultRouteD75156EB": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "OpsvpcPrivateSubnet2RouteTableD8487AE1"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "OpsvpcPublicSubnet2NATGatewayE8998429"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/PrivateSubnet2/DefaultRoute"
      }
    },
    "OpsvpcIGW3F5CB6DC": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "VpcStack/Opsvpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/IGW"
      }
    },
    "OpsvpcVPCGW715F0658": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "Opsvpc07C0A66D"
        },
        "InternetGatewayId": {
          "Ref": "OpsvpcIGW3F5CB6DC"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/Opsvpc/VPCGW"
      }
    },
    "ASGInstanceSecurityGroup0525485D": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "VpcStack/ASG/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "VpcStack/ASG"
          }
        ],
        "VpcId": {
          "Ref": "Opsvpc07C0A66D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/ASG/InstanceSecurityGroup/Resource"
      }
    },
    "ASGInstanceSecurityGroupfromVpcStackOpsLBSecurityGroup3B019D5980451148BA": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "ASGInstanceSecurityGroup0525485D",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "OpsLBSecurityGroup3B0DF252",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/ASG/InstanceSecurityGroup/from VpcStackOpsLBSecurityGroup3B019D59:80"
      }
    },
    "ASGInstanceRoleE263A41B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "VpcStack/ASG"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/ASG/InstanceRole/Resource"
      }
    },
    "ASGInstanceProfile0A2834D7": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "ASGInstanceRoleE263A41B"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/ASG/InstanceProfile"
      }
    },
    "ASGLaunchConfigC00AF12B": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t2.micro",
        "IamInstanceProfile": {
          "Ref": "ASGInstanceProfile0A2834D7"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ASGInstanceSecurityGroup0525485D",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash"
        }
      },
      "DependsOn": [
        "ASGInstanceRoleE263A41B"
      ],
      "Metadata": {
        "aws:cdk:path": "VpcStack/ASG/LaunchConfig"
      }
    },
    "ASG46ED3070": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "1",
        "MinSize": "1",
        "DesiredCapacity": "1",
        "LaunchConfigurationName": {
          "Ref": "ASGLaunchConfigC00AF12B"
        },
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "VpcStack/ASG"
          }
        ],
        "TargetGroupARNs": [
          {
            "Ref": "OpsLBListenerTargetGroup594C071E"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "OpsvpcPrivateSubnet1Subnet1646B52F"
          },
          {
            "Ref": "OpsvpcPrivateSubnet2Subnet3631998D"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/ASG/ASG"
      }
    },
    "ASGScalingPolicyAModestLoadC5714E5A": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "ASG46ED3070"
        },
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ALBRequestCountPerTarget",
            "ResourceLabel": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "OpsLBListenerD66EF95C"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "OpsLBListenerD66EF95C"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::Select": [
                      3,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "OpsLBListenerD66EF95C"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::GetAtt": [
                      "OpsLBListenerTargetGroup594C071E",
                      "TargetGroupFullName"
                    ]
                  }
                ]
              ]
            }
          },
          "TargetValue": 1
        }
      },
      "DependsOn": [
        "OpsLBListenerD66EF95C",
        "OpsLBListenerTargetGroup594C071E"
      ],
      "Metadata": {
        "aws:cdk:path": "VpcStack/ASG/ScalingPolicyAModestLoad/Resource"
      }
    },
    "OpsLB8E6C6B3A": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "OpsLBSecurityGroup3B0DF252",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "OpsvpcPublicSubnet1Subnet07579BF3"
          },
          {
            "Ref": "OpsvpcPublicSubnet2SubnetCEC40F59"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "demo"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "OpsvpcPublicSubnet1DefaultRoute9964E7B2",
        "OpsvpcPublicSubnet2DefaultRoute8EF6A903"
      ],
      "Metadata": {
        "aws:cdk:path": "VpcStack/OpsLB/Resource"
      }
    },
    "OpsLBSecurityGroup3B0DF252": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB VpcStackOpsLB59D78802",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "demo"
          }
        ],
        "VpcId": {
          "Ref": "Opsvpc07C0A66D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/OpsLB/SecurityGroup/Resource"
      }
    },
    "OpsLBSecurityGrouptoVpcStackASGInstanceSecurityGroup1CB1AF6E80D9239992": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "OpsLBSecurityGroup3B0DF252",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "ASGInstanceSecurityGroup0525485D",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/OpsLB/SecurityGroup/to VpcStackASGInstanceSecurityGroup1CB1AF6E:80"
      }
    },
    "OpsLBListenerD66EF95C": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "OpsLBListenerTargetGroup594C071E"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "OpsLB8E6C6B3A"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/OpsLB/Listener/Resource"
      }
    },
    "OpsLBListenerTargetGroup594C071E": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "Tags": [
          {
            "Key": "Name",
            "Value": "demo"
          }
        ],
        "TargetType": "instance",
        "VpcId": {
          "Ref": "Opsvpc07C0A66D"
        }
      },
      "Metadata": {
        "aws:cdk:path": "VpcStack/OpsLB/Listener/TargetGroup/Resource"
      }
    }
  },
  "Parameters": {
    "SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2"
    }
  },
  "Outputs": {
    "exportedId": {
      "Description": "The message that came back from the created stack",
      "Value": {
        "Ref": "Opsvpc07C0A66D"
      }
    }
  }
}